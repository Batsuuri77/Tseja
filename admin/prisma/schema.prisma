// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String                 @id @default(auto()) @map("_id") @db.ObjectId
  parentCategory         String
  category               String
  subCategory            String
  name                   String
  originalPriceInMnt     Int
  isSaleAvailable        Boolean                @default(false)
  salePercent            Int
  discountentPriceInMnt  Int
  saleStartsDate         DateTime
  saleEndsDate           DateTime
  priceInMnt             Int
  numberOfItems          Int
  fit                    String
  brand                  String
  sizesAvailable         String[]
  season                 String
  availableColors        String[]
  pattern                String
  material               String
  isAvailableForOrder    Boolean                @default(false)
  filePath               String[]
  imagePath              String[]
  description            String
  isAvailableForPurchase Boolean                @default(true)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 Order[]
  downloadVerification   DownloadVerification[]
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  pricePaid Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String  @db.ObjectId
  productId String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
}
